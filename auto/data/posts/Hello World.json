[
  {
    "datetime_index": "201712281400",
    "title": "Hello World",
    "short_desc": "Following the tradition of developers' blogging, this post has been named <i>Hello World</i> - to indicate that this post is where my blog started from. Through this post, I'd also like to explain about how these blog pages and homepage have been made.",
    "tags": [
      4,
      5,
      6,
      7,
      10,
      13
    ],
    "image_preview": "1.png",
    "images": [
      "speed.png",
      "1.png",
      "2.png"
    ],
    "html_content": "<p> <span style='display:block; float:left; font-size: 200%;  color:#ffffff; margin-top:5px; margin-right:8px; padding: 10px 20px 10px 20px; text-align:center; background-color: #000;'>F</span>ollowing the tradition of developers' blogging, this post has been named <i>Hello World</i> - to indicate that this post is where my blog started from. Through this post, I'd also like to explain about how this blog has been built. This blog is different from the other blogs in both - choice of UI framework and method of pages generation. </p> <br> <div class='ui horizontal divider'>CHOICE OF FRONT-END</div> <p><a href='http://semantic-ui.com/' target=_blank'>Semantic-UI</a>, a new and growing front-end framework was chosen as the front-end framework, leaving behind other usual frameworks such as <a href='http://getbootstrap.com/' target='_blank'>Bootstrap</a> , <a href='http://materializecss.com/' target='_blank'>MaterializeCSS</a> , <a href='http://foundation.zurb.com/' target='_blank'>Zurb Foundation</a>. After having chosen the front-end framework, the next task is of optimizing the front-end assets for faster rendering of the website - and the score on <a href='https://tools.pingdom.com/' target='_blank'>Pingdom tool</a> was chosen as a reference. After a week of optimizing on CSS files, JS files and lazy-loading images, the website finally attained a performance grade of 92/100 - which is the highest possible score for free hosting on static <a href='https://pages.github.com/' target='_blank'>GitHub pages</a>.</p><p> <img class = 'ui big centered image'> </p> <br> <div class='ui horizontal divider'>BLOG FUNCTIONALITY</div> <p> For continuing further on building blog functionality on a static website, some kind of static site generator like <a href='http://jekyllrb.com/' target='_blank'>Jekyll</a> had to be used. Rather, I re-invented the wheel by replicating the functionalities of Jekyll, with just a hand-made Ruby script. Here is a list of tasks that this Ruby script does - </p><h4><ul class='ui list'><li> Remove the previously generated <code>blog/</code> directory. <li> Read through the <code>data/</code> folder, for blog posts. </li> <li> Create corresponding <code>posts/</code> , <code>tags/</code> and <code>page{i}</code> sub-directories.</li><li>Generate proper <code>index.html</code> files in all sub-directories from ERB templates, with proper back-linking to other entities.</li><li>Add DisQus comment section to all blog posts.</li><li> Add functional search boxes for both posts and tags.</li><li> Provide proper messages for each action, on Terminal.<br><br><img class='ui big centered image'><br><img class='ui big centered image'></li> </ul></h4><p>That way, whatever is shown on my blog is merely just an output of the powerful hand-made Ruby Script. Yet, there are scope of improvements left - </p><h4><ul class='ui list'><li> Read data from configuration files (equivalent of Jekyll's <code>_config.yml</code>).</li><li> Setup intelligent <code>< meta ></code> tags for SEO.</li></ul></h4><br><div class='ui horizontal divider'>CONCLUSION</div><p> Incorporating the functionalities of the almighty Jekyll into a single Ruby script was pretty much fun and interesting. Even though it got challenging at times, I believe that overall, it was an awesome learning experience. For the attention of fellow developers, you can find the codes at the <a href='https://github.com/athityakumar/athityakumar.github.io' target=_blank'>GitHub repository</a>. Feel free to comment below - give your feedback about how Vibe writes.",
    "disqus_identifier": "vfyznpobmirtaecjslxqhkwgud"
  }
]